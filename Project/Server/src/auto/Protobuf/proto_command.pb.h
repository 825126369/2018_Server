// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_command.proto

#ifndef PROTOBUF_proto_5fcommand_2eproto__INCLUDED
#define PROTOBUF_proto_5fcommand_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace xk_protobuf_data {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_proto_5fcommand_2eproto();
void protobuf_InitDefaults_proto_5fcommand_2eproto();
void protobuf_AssignDesc_proto_5fcommand_2eproto();
void protobuf_ShutdownFile_proto_5fcommand_2eproto();


enum ProtoCommand {
  PROTO_NONE = 0,
  PROTO_CHAT = 1100,
  PROTO_REGISTERACCOUNT = 1101,
  PROTO_LOGIN = 1102,
  PROTO_SELECTSERVER = 1103,
  PROTO_CREATEROLE = 1104,
  PROTO_SELECTROLE = 1105,
  PROTO_PUSH_CHATINFO = 5001,
  PROTO_PUSH_PLAYERINFO = 5002,
  ProtoCommand_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProtoCommand_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProtoCommand_IsValid(int value);
const ProtoCommand ProtoCommand_MIN = PROTO_NONE;
const ProtoCommand ProtoCommand_MAX = PROTO_PUSH_PLAYERINFO;
const int ProtoCommand_ARRAYSIZE = ProtoCommand_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtoCommand_descriptor();
inline const ::std::string& ProtoCommand_Name(ProtoCommand value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtoCommand_descriptor(), value);
}
inline bool ProtoCommand_Parse(
    const ::std::string& name, ProtoCommand* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtoCommand>(
    ProtoCommand_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace xk_protobuf_data

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xk_protobuf_data::ProtoCommand> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xk_protobuf_data::ProtoCommand>() {
  return ::xk_protobuf_data::ProtoCommand_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_5fcommand_2eproto__INCLUDED
