// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_message_one.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto_message_one.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace xk_protobuf_data {

namespace {

const ::google::protobuf::Descriptor* pushChatInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pushChatInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* pushPlayerInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pushPlayerInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* pushOhterPlayerInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pushOhterPlayerInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_5fmessage_5fone_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_proto_5fmessage_5fone_2eproto() {
  protobuf_AddDesc_proto_5fmessage_5fone_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto_message_one.proto");
  GOOGLE_CHECK(file != NULL);
  pushChatInfo_descriptor_ = file->message_type(0);
  static const int pushChatInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushChatInfo, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushChatInfo, chatinfo_),
  };
  pushChatInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      pushChatInfo_descriptor_,
      pushChatInfo::internal_default_instance(),
      pushChatInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(pushChatInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushChatInfo, _internal_metadata_));
  pushPlayerInfo_descriptor_ = file->message_type(1);
  static const int pushPlayerInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushPlayerInfo, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushPlayerInfo, playerinfo_),
  };
  pushPlayerInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      pushPlayerInfo_descriptor_,
      pushPlayerInfo::internal_default_instance(),
      pushPlayerInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(pushPlayerInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushPlayerInfo, _internal_metadata_));
  pushOhterPlayerInfo_descriptor_ = file->message_type(2);
  static const int pushOhterPlayerInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushOhterPlayerInfo, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushOhterPlayerInfo, playerinfo_),
  };
  pushOhterPlayerInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      pushOhterPlayerInfo_descriptor_,
      pushOhterPlayerInfo::internal_default_instance(),
      pushOhterPlayerInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(pushOhterPlayerInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushOhterPlayerInfo, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_5fmessage_5fone_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      pushChatInfo_descriptor_, pushChatInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      pushPlayerInfo_descriptor_, pushPlayerInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      pushOhterPlayerInfo_descriptor_, pushOhterPlayerInfo::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_5fmessage_5fone_2eproto() {
  pushChatInfo_default_instance_.Shutdown();
  delete pushChatInfo_reflection_;
  pushPlayerInfo_default_instance_.Shutdown();
  delete pushPlayerInfo_reflection_;
  pushOhterPlayerInfo_default_instance_.Shutdown();
  delete pushOhterPlayerInfo_reflection_;
}

void protobuf_InitDefaults_proto_5fmessage_5fone_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::xk_protobuf_data::protobuf_InitDefaults_proto_5fstruct_2eproto();
  pushChatInfo_default_instance_.DefaultConstruct();
  pushPlayerInfo_default_instance_.DefaultConstruct();
  pushOhterPlayerInfo_default_instance_.DefaultConstruct();
  pushChatInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  pushPlayerInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  pushOhterPlayerInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_proto_5fmessage_5fone_2eproto_once_);
void protobuf_InitDefaults_proto_5fmessage_5fone_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_proto_5fmessage_5fone_2eproto_once_,
                 &protobuf_InitDefaults_proto_5fmessage_5fone_2eproto_impl);
}
void protobuf_AddDesc_proto_5fmessage_5fone_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_proto_5fmessage_5fone_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027proto_message_one.proto\022\020xk_protobuf_d"
    "ata\032\022proto_struct.proto\"S\n\014pushChatInfo\022"
    "\016\n\006result\030\001 \001(\r\0223\n\010chatInfo\030\002 \001(\0132!.xk_p"
    "rotobuf_data.struct_ChatInfo\"_\n\016pushPlay"
    "erInfo\022\016\n\006result\030\001 \001(\r\022=\n\nplayerInfo\030\002 \001"
    "(\0132).xk_protobuf_data.struct_PlayerDetai"
    "lInfo\"d\n\023pushOhterPlayerInfo\022\016\n\006result\030\001"
    " \001(\r\022=\n\nplayerInfo\030\002 \001(\0132).xk_protobuf_d"
    "ata.struct_PlayerDetailInfob\006proto3", 355);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto_message_one.proto", &protobuf_RegisterTypes);
  ::xk_protobuf_data::protobuf_AddDesc_proto_5fstruct_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_5fmessage_5fone_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_proto_5fmessage_5fone_2eproto_once_);
void protobuf_AddDesc_proto_5fmessage_5fone_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_proto_5fmessage_5fone_2eproto_once_,
                 &protobuf_AddDesc_proto_5fmessage_5fone_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_5fmessage_5fone_2eproto {
  StaticDescriptorInitializer_proto_5fmessage_5fone_2eproto() {
    protobuf_AddDesc_proto_5fmessage_5fone_2eproto();
  }
} static_descriptor_initializer_proto_5fmessage_5fone_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pushChatInfo::kResultFieldNumber;
const int pushChatInfo::kChatInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pushChatInfo::pushChatInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_proto_5fmessage_5fone_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:xk_protobuf_data.pushChatInfo)
}

void pushChatInfo::InitAsDefaultInstance() {
  chatinfo_ = const_cast< ::xk_protobuf_data::struct_ChatInfo*>(
      ::xk_protobuf_data::struct_ChatInfo::internal_default_instance());
}

pushChatInfo::pushChatInfo(const pushChatInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xk_protobuf_data.pushChatInfo)
}

void pushChatInfo::SharedCtor() {
  chatinfo_ = NULL;
  result_ = 0u;
  _cached_size_ = 0;
}

pushChatInfo::~pushChatInfo() {
  // @@protoc_insertion_point(destructor:xk_protobuf_data.pushChatInfo)
  SharedDtor();
}

void pushChatInfo::SharedDtor() {
  if (this != &pushChatInfo_default_instance_.get()) {
    delete chatinfo_;
  }
}

void pushChatInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pushChatInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pushChatInfo_descriptor_;
}

const pushChatInfo& pushChatInfo::default_instance() {
  protobuf_InitDefaults_proto_5fmessage_5fone_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<pushChatInfo> pushChatInfo_default_instance_;

pushChatInfo* pushChatInfo::New(::google::protobuf::Arena* arena) const {
  pushChatInfo* n = new pushChatInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void pushChatInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:xk_protobuf_data.pushChatInfo)
  result_ = 0u;
  if (GetArenaNoVirtual() == NULL && chatinfo_ != NULL) delete chatinfo_;
  chatinfo_ = NULL;
}

bool pushChatInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xk_protobuf_data.pushChatInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_chatInfo;
        break;
      }

      // optional .xk_protobuf_data.struct_ChatInfo chatInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_chatInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chatinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xk_protobuf_data.pushChatInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xk_protobuf_data.pushChatInfo)
  return false;
#undef DO_
}

void pushChatInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xk_protobuf_data.pushChatInfo)
  // optional uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // optional .xk_protobuf_data.struct_ChatInfo chatInfo = 2;
  if (this->has_chatinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->chatinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:xk_protobuf_data.pushChatInfo)
}

::google::protobuf::uint8* pushChatInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xk_protobuf_data.pushChatInfo)
  // optional uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // optional .xk_protobuf_data.struct_ChatInfo chatInfo = 2;
  if (this->has_chatinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->chatinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:xk_protobuf_data.pushChatInfo)
  return target;
}

size_t pushChatInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xk_protobuf_data.pushChatInfo)
  size_t total_size = 0;

  // optional uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  // optional .xk_protobuf_data.struct_ChatInfo chatInfo = 2;
  if (this->has_chatinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chatinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pushChatInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xk_protobuf_data.pushChatInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const pushChatInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pushChatInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xk_protobuf_data.pushChatInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xk_protobuf_data.pushChatInfo)
    UnsafeMergeFrom(*source);
  }
}

void pushChatInfo::MergeFrom(const pushChatInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xk_protobuf_data.pushChatInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void pushChatInfo::UnsafeMergeFrom(const pushChatInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.has_chatinfo()) {
    mutable_chatinfo()->::xk_protobuf_data::struct_ChatInfo::MergeFrom(from.chatinfo());
  }
}

void pushChatInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xk_protobuf_data.pushChatInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pushChatInfo::CopyFrom(const pushChatInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xk_protobuf_data.pushChatInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool pushChatInfo::IsInitialized() const {

  return true;
}

void pushChatInfo::Swap(pushChatInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pushChatInfo::InternalSwap(pushChatInfo* other) {
  std::swap(result_, other->result_);
  std::swap(chatinfo_, other->chatinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata pushChatInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pushChatInfo_descriptor_;
  metadata.reflection = pushChatInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// pushChatInfo

// optional uint32 result = 1;
void pushChatInfo::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 pushChatInfo::result() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.pushChatInfo.result)
  return result_;
}
void pushChatInfo::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.pushChatInfo.result)
}

// optional .xk_protobuf_data.struct_ChatInfo chatInfo = 2;
bool pushChatInfo::has_chatinfo() const {
  return this != internal_default_instance() && chatinfo_ != NULL;
}
void pushChatInfo::clear_chatinfo() {
  if (GetArenaNoVirtual() == NULL && chatinfo_ != NULL) delete chatinfo_;
  chatinfo_ = NULL;
}
const ::xk_protobuf_data::struct_ChatInfo& pushChatInfo::chatinfo() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.pushChatInfo.chatInfo)
  return chatinfo_ != NULL ? *chatinfo_
                         : *::xk_protobuf_data::struct_ChatInfo::internal_default_instance();
}
::xk_protobuf_data::struct_ChatInfo* pushChatInfo::mutable_chatinfo() {
  
  if (chatinfo_ == NULL) {
    chatinfo_ = new ::xk_protobuf_data::struct_ChatInfo;
  }
  // @@protoc_insertion_point(field_mutable:xk_protobuf_data.pushChatInfo.chatInfo)
  return chatinfo_;
}
::xk_protobuf_data::struct_ChatInfo* pushChatInfo::release_chatinfo() {
  // @@protoc_insertion_point(field_release:xk_protobuf_data.pushChatInfo.chatInfo)
  
  ::xk_protobuf_data::struct_ChatInfo* temp = chatinfo_;
  chatinfo_ = NULL;
  return temp;
}
void pushChatInfo::set_allocated_chatinfo(::xk_protobuf_data::struct_ChatInfo* chatinfo) {
  delete chatinfo_;
  chatinfo_ = chatinfo;
  if (chatinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xk_protobuf_data.pushChatInfo.chatInfo)
}

inline const pushChatInfo* pushChatInfo::internal_default_instance() {
  return &pushChatInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pushPlayerInfo::kResultFieldNumber;
const int pushPlayerInfo::kPlayerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pushPlayerInfo::pushPlayerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_proto_5fmessage_5fone_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:xk_protobuf_data.pushPlayerInfo)
}

void pushPlayerInfo::InitAsDefaultInstance() {
  playerinfo_ = const_cast< ::xk_protobuf_data::struct_PlayerDetailInfo*>(
      ::xk_protobuf_data::struct_PlayerDetailInfo::internal_default_instance());
}

pushPlayerInfo::pushPlayerInfo(const pushPlayerInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xk_protobuf_data.pushPlayerInfo)
}

void pushPlayerInfo::SharedCtor() {
  playerinfo_ = NULL;
  result_ = 0u;
  _cached_size_ = 0;
}

pushPlayerInfo::~pushPlayerInfo() {
  // @@protoc_insertion_point(destructor:xk_protobuf_data.pushPlayerInfo)
  SharedDtor();
}

void pushPlayerInfo::SharedDtor() {
  if (this != &pushPlayerInfo_default_instance_.get()) {
    delete playerinfo_;
  }
}

void pushPlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pushPlayerInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pushPlayerInfo_descriptor_;
}

const pushPlayerInfo& pushPlayerInfo::default_instance() {
  protobuf_InitDefaults_proto_5fmessage_5fone_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<pushPlayerInfo> pushPlayerInfo_default_instance_;

pushPlayerInfo* pushPlayerInfo::New(::google::protobuf::Arena* arena) const {
  pushPlayerInfo* n = new pushPlayerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void pushPlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:xk_protobuf_data.pushPlayerInfo)
  result_ = 0u;
  if (GetArenaNoVirtual() == NULL && playerinfo_ != NULL) delete playerinfo_;
  playerinfo_ = NULL;
}

bool pushPlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xk_protobuf_data.pushPlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_playerInfo;
        break;
      }

      // optional .xk_protobuf_data.struct_PlayerDetailInfo playerInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_playerInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_playerinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xk_protobuf_data.pushPlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xk_protobuf_data.pushPlayerInfo)
  return false;
#undef DO_
}

void pushPlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xk_protobuf_data.pushPlayerInfo)
  // optional uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // optional .xk_protobuf_data.struct_PlayerDetailInfo playerInfo = 2;
  if (this->has_playerinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->playerinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:xk_protobuf_data.pushPlayerInfo)
}

::google::protobuf::uint8* pushPlayerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xk_protobuf_data.pushPlayerInfo)
  // optional uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // optional .xk_protobuf_data.struct_PlayerDetailInfo playerInfo = 2;
  if (this->has_playerinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->playerinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:xk_protobuf_data.pushPlayerInfo)
  return target;
}

size_t pushPlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xk_protobuf_data.pushPlayerInfo)
  size_t total_size = 0;

  // optional uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  // optional .xk_protobuf_data.struct_PlayerDetailInfo playerInfo = 2;
  if (this->has_playerinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->playerinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pushPlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xk_protobuf_data.pushPlayerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const pushPlayerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pushPlayerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xk_protobuf_data.pushPlayerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xk_protobuf_data.pushPlayerInfo)
    UnsafeMergeFrom(*source);
  }
}

void pushPlayerInfo::MergeFrom(const pushPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xk_protobuf_data.pushPlayerInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void pushPlayerInfo::UnsafeMergeFrom(const pushPlayerInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.has_playerinfo()) {
    mutable_playerinfo()->::xk_protobuf_data::struct_PlayerDetailInfo::MergeFrom(from.playerinfo());
  }
}

void pushPlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xk_protobuf_data.pushPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pushPlayerInfo::CopyFrom(const pushPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xk_protobuf_data.pushPlayerInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool pushPlayerInfo::IsInitialized() const {

  return true;
}

void pushPlayerInfo::Swap(pushPlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pushPlayerInfo::InternalSwap(pushPlayerInfo* other) {
  std::swap(result_, other->result_);
  std::swap(playerinfo_, other->playerinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata pushPlayerInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pushPlayerInfo_descriptor_;
  metadata.reflection = pushPlayerInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// pushPlayerInfo

// optional uint32 result = 1;
void pushPlayerInfo::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 pushPlayerInfo::result() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.pushPlayerInfo.result)
  return result_;
}
void pushPlayerInfo::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.pushPlayerInfo.result)
}

// optional .xk_protobuf_data.struct_PlayerDetailInfo playerInfo = 2;
bool pushPlayerInfo::has_playerinfo() const {
  return this != internal_default_instance() && playerinfo_ != NULL;
}
void pushPlayerInfo::clear_playerinfo() {
  if (GetArenaNoVirtual() == NULL && playerinfo_ != NULL) delete playerinfo_;
  playerinfo_ = NULL;
}
const ::xk_protobuf_data::struct_PlayerDetailInfo& pushPlayerInfo::playerinfo() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.pushPlayerInfo.playerInfo)
  return playerinfo_ != NULL ? *playerinfo_
                         : *::xk_protobuf_data::struct_PlayerDetailInfo::internal_default_instance();
}
::xk_protobuf_data::struct_PlayerDetailInfo* pushPlayerInfo::mutable_playerinfo() {
  
  if (playerinfo_ == NULL) {
    playerinfo_ = new ::xk_protobuf_data::struct_PlayerDetailInfo;
  }
  // @@protoc_insertion_point(field_mutable:xk_protobuf_data.pushPlayerInfo.playerInfo)
  return playerinfo_;
}
::xk_protobuf_data::struct_PlayerDetailInfo* pushPlayerInfo::release_playerinfo() {
  // @@protoc_insertion_point(field_release:xk_protobuf_data.pushPlayerInfo.playerInfo)
  
  ::xk_protobuf_data::struct_PlayerDetailInfo* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}
void pushPlayerInfo::set_allocated_playerinfo(::xk_protobuf_data::struct_PlayerDetailInfo* playerinfo) {
  delete playerinfo_;
  playerinfo_ = playerinfo;
  if (playerinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xk_protobuf_data.pushPlayerInfo.playerInfo)
}

inline const pushPlayerInfo* pushPlayerInfo::internal_default_instance() {
  return &pushPlayerInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pushOhterPlayerInfo::kResultFieldNumber;
const int pushOhterPlayerInfo::kPlayerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pushOhterPlayerInfo::pushOhterPlayerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_proto_5fmessage_5fone_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:xk_protobuf_data.pushOhterPlayerInfo)
}

void pushOhterPlayerInfo::InitAsDefaultInstance() {
  playerinfo_ = const_cast< ::xk_protobuf_data::struct_PlayerDetailInfo*>(
      ::xk_protobuf_data::struct_PlayerDetailInfo::internal_default_instance());
}

pushOhterPlayerInfo::pushOhterPlayerInfo(const pushOhterPlayerInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xk_protobuf_data.pushOhterPlayerInfo)
}

void pushOhterPlayerInfo::SharedCtor() {
  playerinfo_ = NULL;
  result_ = 0u;
  _cached_size_ = 0;
}

pushOhterPlayerInfo::~pushOhterPlayerInfo() {
  // @@protoc_insertion_point(destructor:xk_protobuf_data.pushOhterPlayerInfo)
  SharedDtor();
}

void pushOhterPlayerInfo::SharedDtor() {
  if (this != &pushOhterPlayerInfo_default_instance_.get()) {
    delete playerinfo_;
  }
}

void pushOhterPlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pushOhterPlayerInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pushOhterPlayerInfo_descriptor_;
}

const pushOhterPlayerInfo& pushOhterPlayerInfo::default_instance() {
  protobuf_InitDefaults_proto_5fmessage_5fone_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<pushOhterPlayerInfo> pushOhterPlayerInfo_default_instance_;

pushOhterPlayerInfo* pushOhterPlayerInfo::New(::google::protobuf::Arena* arena) const {
  pushOhterPlayerInfo* n = new pushOhterPlayerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void pushOhterPlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:xk_protobuf_data.pushOhterPlayerInfo)
  result_ = 0u;
  if (GetArenaNoVirtual() == NULL && playerinfo_ != NULL) delete playerinfo_;
  playerinfo_ = NULL;
}

bool pushOhterPlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xk_protobuf_data.pushOhterPlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_playerInfo;
        break;
      }

      // optional .xk_protobuf_data.struct_PlayerDetailInfo playerInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_playerInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_playerinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xk_protobuf_data.pushOhterPlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xk_protobuf_data.pushOhterPlayerInfo)
  return false;
#undef DO_
}

void pushOhterPlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xk_protobuf_data.pushOhterPlayerInfo)
  // optional uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // optional .xk_protobuf_data.struct_PlayerDetailInfo playerInfo = 2;
  if (this->has_playerinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->playerinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:xk_protobuf_data.pushOhterPlayerInfo)
}

::google::protobuf::uint8* pushOhterPlayerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xk_protobuf_data.pushOhterPlayerInfo)
  // optional uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // optional .xk_protobuf_data.struct_PlayerDetailInfo playerInfo = 2;
  if (this->has_playerinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->playerinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:xk_protobuf_data.pushOhterPlayerInfo)
  return target;
}

size_t pushOhterPlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xk_protobuf_data.pushOhterPlayerInfo)
  size_t total_size = 0;

  // optional uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  // optional .xk_protobuf_data.struct_PlayerDetailInfo playerInfo = 2;
  if (this->has_playerinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->playerinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pushOhterPlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xk_protobuf_data.pushOhterPlayerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const pushOhterPlayerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pushOhterPlayerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xk_protobuf_data.pushOhterPlayerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xk_protobuf_data.pushOhterPlayerInfo)
    UnsafeMergeFrom(*source);
  }
}

void pushOhterPlayerInfo::MergeFrom(const pushOhterPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xk_protobuf_data.pushOhterPlayerInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void pushOhterPlayerInfo::UnsafeMergeFrom(const pushOhterPlayerInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.has_playerinfo()) {
    mutable_playerinfo()->::xk_protobuf_data::struct_PlayerDetailInfo::MergeFrom(from.playerinfo());
  }
}

void pushOhterPlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xk_protobuf_data.pushOhterPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pushOhterPlayerInfo::CopyFrom(const pushOhterPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xk_protobuf_data.pushOhterPlayerInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool pushOhterPlayerInfo::IsInitialized() const {

  return true;
}

void pushOhterPlayerInfo::Swap(pushOhterPlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pushOhterPlayerInfo::InternalSwap(pushOhterPlayerInfo* other) {
  std::swap(result_, other->result_);
  std::swap(playerinfo_, other->playerinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata pushOhterPlayerInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pushOhterPlayerInfo_descriptor_;
  metadata.reflection = pushOhterPlayerInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// pushOhterPlayerInfo

// optional uint32 result = 1;
void pushOhterPlayerInfo::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 pushOhterPlayerInfo::result() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.pushOhterPlayerInfo.result)
  return result_;
}
void pushOhterPlayerInfo::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.pushOhterPlayerInfo.result)
}

// optional .xk_protobuf_data.struct_PlayerDetailInfo playerInfo = 2;
bool pushOhterPlayerInfo::has_playerinfo() const {
  return this != internal_default_instance() && playerinfo_ != NULL;
}
void pushOhterPlayerInfo::clear_playerinfo() {
  if (GetArenaNoVirtual() == NULL && playerinfo_ != NULL) delete playerinfo_;
  playerinfo_ = NULL;
}
const ::xk_protobuf_data::struct_PlayerDetailInfo& pushOhterPlayerInfo::playerinfo() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.pushOhterPlayerInfo.playerInfo)
  return playerinfo_ != NULL ? *playerinfo_
                         : *::xk_protobuf_data::struct_PlayerDetailInfo::internal_default_instance();
}
::xk_protobuf_data::struct_PlayerDetailInfo* pushOhterPlayerInfo::mutable_playerinfo() {
  
  if (playerinfo_ == NULL) {
    playerinfo_ = new ::xk_protobuf_data::struct_PlayerDetailInfo;
  }
  // @@protoc_insertion_point(field_mutable:xk_protobuf_data.pushOhterPlayerInfo.playerInfo)
  return playerinfo_;
}
::xk_protobuf_data::struct_PlayerDetailInfo* pushOhterPlayerInfo::release_playerinfo() {
  // @@protoc_insertion_point(field_release:xk_protobuf_data.pushOhterPlayerInfo.playerInfo)
  
  ::xk_protobuf_data::struct_PlayerDetailInfo* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}
void pushOhterPlayerInfo::set_allocated_playerinfo(::xk_protobuf_data::struct_PlayerDetailInfo* playerinfo) {
  delete playerinfo_;
  playerinfo_ = playerinfo;
  if (playerinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xk_protobuf_data.pushOhterPlayerInfo.playerInfo)
}

inline const pushOhterPlayerInfo* pushOhterPlayerInfo::internal_default_instance() {
  return &pushOhterPlayerInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace xk_protobuf_data

// @@protoc_insertion_point(global_scope)
