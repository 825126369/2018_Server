// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_message_one.proto

#ifndef PROTOBUF_proto_5fmessage_5fone_2eproto__INCLUDED
#define PROTOBUF_proto_5fmessage_5fone_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "proto_struct.pb.h"
// @@protoc_insertion_point(includes)

namespace xk_protobuf_data {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_proto_5fmessage_5fone_2eproto();
void protobuf_InitDefaults_proto_5fmessage_5fone_2eproto();
void protobuf_AssignDesc_proto_5fmessage_5fone_2eproto();
void protobuf_ShutdownFile_proto_5fmessage_5fone_2eproto();

class pushChatInfo;
class pushOhterPlayerInfo;
class pushPlayerInfo;

// ===================================================================

class pushChatInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xk_protobuf_data.pushChatInfo) */ {
 public:
  pushChatInfo();
  virtual ~pushChatInfo();

  pushChatInfo(const pushChatInfo& from);

  inline pushChatInfo& operator=(const pushChatInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pushChatInfo& default_instance();

  static const pushChatInfo* internal_default_instance();

  void Swap(pushChatInfo* other);

  // implements Message ----------------------------------------------

  inline pushChatInfo* New() const { return New(NULL); }

  pushChatInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pushChatInfo& from);
  void MergeFrom(const pushChatInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(pushChatInfo* other);
  void UnsafeMergeFrom(const pushChatInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // optional .xk_protobuf_data.struct_ChatInfo chatInfo = 2;
  bool has_chatinfo() const;
  void clear_chatinfo();
  static const int kChatInfoFieldNumber = 2;
  const ::xk_protobuf_data::struct_ChatInfo& chatinfo() const;
  ::xk_protobuf_data::struct_ChatInfo* mutable_chatinfo();
  ::xk_protobuf_data::struct_ChatInfo* release_chatinfo();
  void set_allocated_chatinfo(::xk_protobuf_data::struct_ChatInfo* chatinfo);

  // @@protoc_insertion_point(class_scope:xk_protobuf_data.pushChatInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xk_protobuf_data::struct_ChatInfo* chatinfo_;
  ::google::protobuf::uint32 result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_proto_5fmessage_5fone_2eproto_impl();
  friend void  protobuf_AddDesc_proto_5fmessage_5fone_2eproto_impl();
  friend void protobuf_AssignDesc_proto_5fmessage_5fone_2eproto();
  friend void protobuf_ShutdownFile_proto_5fmessage_5fone_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<pushChatInfo> pushChatInfo_default_instance_;

// -------------------------------------------------------------------

class pushPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xk_protobuf_data.pushPlayerInfo) */ {
 public:
  pushPlayerInfo();
  virtual ~pushPlayerInfo();

  pushPlayerInfo(const pushPlayerInfo& from);

  inline pushPlayerInfo& operator=(const pushPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pushPlayerInfo& default_instance();

  static const pushPlayerInfo* internal_default_instance();

  void Swap(pushPlayerInfo* other);

  // implements Message ----------------------------------------------

  inline pushPlayerInfo* New() const { return New(NULL); }

  pushPlayerInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pushPlayerInfo& from);
  void MergeFrom(const pushPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(pushPlayerInfo* other);
  void UnsafeMergeFrom(const pushPlayerInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // optional .xk_protobuf_data.struct_PlayerDetailInfo playerInfo = 2;
  bool has_playerinfo() const;
  void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 2;
  const ::xk_protobuf_data::struct_PlayerDetailInfo& playerinfo() const;
  ::xk_protobuf_data::struct_PlayerDetailInfo* mutable_playerinfo();
  ::xk_protobuf_data::struct_PlayerDetailInfo* release_playerinfo();
  void set_allocated_playerinfo(::xk_protobuf_data::struct_PlayerDetailInfo* playerinfo);

  // @@protoc_insertion_point(class_scope:xk_protobuf_data.pushPlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xk_protobuf_data::struct_PlayerDetailInfo* playerinfo_;
  ::google::protobuf::uint32 result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_proto_5fmessage_5fone_2eproto_impl();
  friend void  protobuf_AddDesc_proto_5fmessage_5fone_2eproto_impl();
  friend void protobuf_AssignDesc_proto_5fmessage_5fone_2eproto();
  friend void protobuf_ShutdownFile_proto_5fmessage_5fone_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<pushPlayerInfo> pushPlayerInfo_default_instance_;

// -------------------------------------------------------------------

class pushOhterPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xk_protobuf_data.pushOhterPlayerInfo) */ {
 public:
  pushOhterPlayerInfo();
  virtual ~pushOhterPlayerInfo();

  pushOhterPlayerInfo(const pushOhterPlayerInfo& from);

  inline pushOhterPlayerInfo& operator=(const pushOhterPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pushOhterPlayerInfo& default_instance();

  static const pushOhterPlayerInfo* internal_default_instance();

  void Swap(pushOhterPlayerInfo* other);

  // implements Message ----------------------------------------------

  inline pushOhterPlayerInfo* New() const { return New(NULL); }

  pushOhterPlayerInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pushOhterPlayerInfo& from);
  void MergeFrom(const pushOhterPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(pushOhterPlayerInfo* other);
  void UnsafeMergeFrom(const pushOhterPlayerInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // optional .xk_protobuf_data.struct_PlayerDetailInfo playerInfo = 2;
  bool has_playerinfo() const;
  void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 2;
  const ::xk_protobuf_data::struct_PlayerDetailInfo& playerinfo() const;
  ::xk_protobuf_data::struct_PlayerDetailInfo* mutable_playerinfo();
  ::xk_protobuf_data::struct_PlayerDetailInfo* release_playerinfo();
  void set_allocated_playerinfo(::xk_protobuf_data::struct_PlayerDetailInfo* playerinfo);

  // @@protoc_insertion_point(class_scope:xk_protobuf_data.pushOhterPlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xk_protobuf_data::struct_PlayerDetailInfo* playerinfo_;
  ::google::protobuf::uint32 result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_proto_5fmessage_5fone_2eproto_impl();
  friend void  protobuf_AddDesc_proto_5fmessage_5fone_2eproto_impl();
  friend void protobuf_AssignDesc_proto_5fmessage_5fone_2eproto();
  friend void protobuf_ShutdownFile_proto_5fmessage_5fone_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<pushOhterPlayerInfo> pushOhterPlayerInfo_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// pushChatInfo

// optional uint32 result = 1;
inline void pushChatInfo::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 pushChatInfo::result() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.pushChatInfo.result)
  return result_;
}
inline void pushChatInfo::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.pushChatInfo.result)
}

// optional .xk_protobuf_data.struct_ChatInfo chatInfo = 2;
inline bool pushChatInfo::has_chatinfo() const {
  return this != internal_default_instance() && chatinfo_ != NULL;
}
inline void pushChatInfo::clear_chatinfo() {
  if (GetArenaNoVirtual() == NULL && chatinfo_ != NULL) delete chatinfo_;
  chatinfo_ = NULL;
}
inline const ::xk_protobuf_data::struct_ChatInfo& pushChatInfo::chatinfo() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.pushChatInfo.chatInfo)
  return chatinfo_ != NULL ? *chatinfo_
                         : *::xk_protobuf_data::struct_ChatInfo::internal_default_instance();
}
inline ::xk_protobuf_data::struct_ChatInfo* pushChatInfo::mutable_chatinfo() {
  
  if (chatinfo_ == NULL) {
    chatinfo_ = new ::xk_protobuf_data::struct_ChatInfo;
  }
  // @@protoc_insertion_point(field_mutable:xk_protobuf_data.pushChatInfo.chatInfo)
  return chatinfo_;
}
inline ::xk_protobuf_data::struct_ChatInfo* pushChatInfo::release_chatinfo() {
  // @@protoc_insertion_point(field_release:xk_protobuf_data.pushChatInfo.chatInfo)
  
  ::xk_protobuf_data::struct_ChatInfo* temp = chatinfo_;
  chatinfo_ = NULL;
  return temp;
}
inline void pushChatInfo::set_allocated_chatinfo(::xk_protobuf_data::struct_ChatInfo* chatinfo) {
  delete chatinfo_;
  chatinfo_ = chatinfo;
  if (chatinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xk_protobuf_data.pushChatInfo.chatInfo)
}

inline const pushChatInfo* pushChatInfo::internal_default_instance() {
  return &pushChatInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// pushPlayerInfo

// optional uint32 result = 1;
inline void pushPlayerInfo::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 pushPlayerInfo::result() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.pushPlayerInfo.result)
  return result_;
}
inline void pushPlayerInfo::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.pushPlayerInfo.result)
}

// optional .xk_protobuf_data.struct_PlayerDetailInfo playerInfo = 2;
inline bool pushPlayerInfo::has_playerinfo() const {
  return this != internal_default_instance() && playerinfo_ != NULL;
}
inline void pushPlayerInfo::clear_playerinfo() {
  if (GetArenaNoVirtual() == NULL && playerinfo_ != NULL) delete playerinfo_;
  playerinfo_ = NULL;
}
inline const ::xk_protobuf_data::struct_PlayerDetailInfo& pushPlayerInfo::playerinfo() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.pushPlayerInfo.playerInfo)
  return playerinfo_ != NULL ? *playerinfo_
                         : *::xk_protobuf_data::struct_PlayerDetailInfo::internal_default_instance();
}
inline ::xk_protobuf_data::struct_PlayerDetailInfo* pushPlayerInfo::mutable_playerinfo() {
  
  if (playerinfo_ == NULL) {
    playerinfo_ = new ::xk_protobuf_data::struct_PlayerDetailInfo;
  }
  // @@protoc_insertion_point(field_mutable:xk_protobuf_data.pushPlayerInfo.playerInfo)
  return playerinfo_;
}
inline ::xk_protobuf_data::struct_PlayerDetailInfo* pushPlayerInfo::release_playerinfo() {
  // @@protoc_insertion_point(field_release:xk_protobuf_data.pushPlayerInfo.playerInfo)
  
  ::xk_protobuf_data::struct_PlayerDetailInfo* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}
inline void pushPlayerInfo::set_allocated_playerinfo(::xk_protobuf_data::struct_PlayerDetailInfo* playerinfo) {
  delete playerinfo_;
  playerinfo_ = playerinfo;
  if (playerinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xk_protobuf_data.pushPlayerInfo.playerInfo)
}

inline const pushPlayerInfo* pushPlayerInfo::internal_default_instance() {
  return &pushPlayerInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// pushOhterPlayerInfo

// optional uint32 result = 1;
inline void pushOhterPlayerInfo::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 pushOhterPlayerInfo::result() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.pushOhterPlayerInfo.result)
  return result_;
}
inline void pushOhterPlayerInfo::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.pushOhterPlayerInfo.result)
}

// optional .xk_protobuf_data.struct_PlayerDetailInfo playerInfo = 2;
inline bool pushOhterPlayerInfo::has_playerinfo() const {
  return this != internal_default_instance() && playerinfo_ != NULL;
}
inline void pushOhterPlayerInfo::clear_playerinfo() {
  if (GetArenaNoVirtual() == NULL && playerinfo_ != NULL) delete playerinfo_;
  playerinfo_ = NULL;
}
inline const ::xk_protobuf_data::struct_PlayerDetailInfo& pushOhterPlayerInfo::playerinfo() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.pushOhterPlayerInfo.playerInfo)
  return playerinfo_ != NULL ? *playerinfo_
                         : *::xk_protobuf_data::struct_PlayerDetailInfo::internal_default_instance();
}
inline ::xk_protobuf_data::struct_PlayerDetailInfo* pushOhterPlayerInfo::mutable_playerinfo() {
  
  if (playerinfo_ == NULL) {
    playerinfo_ = new ::xk_protobuf_data::struct_PlayerDetailInfo;
  }
  // @@protoc_insertion_point(field_mutable:xk_protobuf_data.pushOhterPlayerInfo.playerInfo)
  return playerinfo_;
}
inline ::xk_protobuf_data::struct_PlayerDetailInfo* pushOhterPlayerInfo::release_playerinfo() {
  // @@protoc_insertion_point(field_release:xk_protobuf_data.pushOhterPlayerInfo.playerInfo)
  
  ::xk_protobuf_data::struct_PlayerDetailInfo* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}
inline void pushOhterPlayerInfo::set_allocated_playerinfo(::xk_protobuf_data::struct_PlayerDetailInfo* playerinfo) {
  delete playerinfo_;
  playerinfo_ = playerinfo;
  if (playerinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xk_protobuf_data.pushOhterPlayerInfo.playerInfo)
}

inline const pushOhterPlayerInfo* pushOhterPlayerInfo::internal_default_instance() {
  return &pushOhterPlayerInfo_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace xk_protobuf_data

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_5fmessage_5fone_2eproto__INCLUDED
