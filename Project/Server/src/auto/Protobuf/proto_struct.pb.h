// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_struct.proto

#ifndef PROTOBUF_proto_5fstruct_2eproto__INCLUDED
#define PROTOBUF_proto_5fstruct_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace xk_protobuf_data {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_proto_5fstruct_2eproto();
void protobuf_InitDefaults_proto_5fstruct_2eproto();
void protobuf_AssignDesc_proto_5fstruct_2eproto();
void protobuf_ShutdownFile_proto_5fstruct_2eproto();

class struct_ChatInfo;
class struct_ItemInfo;
class struct_LOL_HeroDetailInfo;
class struct_PlayerBagInfo;
class struct_PlayerDetailInfo;
class struct_PlayerSimpleInfo;
class struct_serverList;

// ===================================================================

class struct_serverList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xk_protobuf_data.struct_serverList) */ {
 public:
  struct_serverList();
  virtual ~struct_serverList();

  struct_serverList(const struct_serverList& from);

  inline struct_serverList& operator=(const struct_serverList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const struct_serverList& default_instance();

  static const struct_serverList* internal_default_instance();

  void Swap(struct_serverList* other);

  // implements Message ----------------------------------------------

  inline struct_serverList* New() const { return New(NULL); }

  struct_serverList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const struct_serverList& from);
  void MergeFrom(const struct_serverList& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(struct_serverList* other);
  void UnsafeMergeFrom(const struct_serverList& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional uint32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // optional uint32 serverId = 3;
  void clear_serverid();
  static const int kServerIdFieldNumber = 3;
  ::google::protobuf::uint32 serverid() const;
  void set_serverid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xk_protobuf_data.struct_serverList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 serverid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_proto_5fstruct_2eproto_impl();
  friend void  protobuf_AddDesc_proto_5fstruct_2eproto_impl();
  friend void protobuf_AssignDesc_proto_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_proto_5fstruct_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<struct_serverList> struct_serverList_default_instance_;

// -------------------------------------------------------------------

class struct_ItemInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xk_protobuf_data.struct_ItemInfo) */ {
 public:
  struct_ItemInfo();
  virtual ~struct_ItemInfo();

  struct_ItemInfo(const struct_ItemInfo& from);

  inline struct_ItemInfo& operator=(const struct_ItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const struct_ItemInfo& default_instance();

  static const struct_ItemInfo* internal_default_instance();

  void Swap(struct_ItemInfo* other);

  // implements Message ----------------------------------------------

  inline struct_ItemInfo* New() const { return New(NULL); }

  struct_ItemInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const struct_ItemInfo& from);
  void MergeFrom(const struct_ItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(struct_ItemInfo* other);
  void UnsafeMergeFrom(const struct_ItemInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint32 pos = 2;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  ::google::protobuf::uint32 pos() const;
  void set_pos(::google::protobuf::uint32 value);

  // optional uint32 configId = 3;
  void clear_configid();
  static const int kConfigIdFieldNumber = 3;
  ::google::protobuf::uint32 configid() const;
  void set_configid(::google::protobuf::uint32 value);

  // optional uint32 cout = 4;
  void clear_cout();
  static const int kCoutFieldNumber = 4;
  ::google::protobuf::uint32 cout() const;
  void set_cout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xk_protobuf_data.struct_ItemInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 configid_;
  ::google::protobuf::uint32 cout_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_proto_5fstruct_2eproto_impl();
  friend void  protobuf_AddDesc_proto_5fstruct_2eproto_impl();
  friend void protobuf_AssignDesc_proto_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_proto_5fstruct_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<struct_ItemInfo> struct_ItemInfo_default_instance_;

// -------------------------------------------------------------------

class struct_PlayerSimpleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xk_protobuf_data.struct_PlayerSimpleInfo) */ {
 public:
  struct_PlayerSimpleInfo();
  virtual ~struct_PlayerSimpleInfo();

  struct_PlayerSimpleInfo(const struct_PlayerSimpleInfo& from);

  inline struct_PlayerSimpleInfo& operator=(const struct_PlayerSimpleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const struct_PlayerSimpleInfo& default_instance();

  static const struct_PlayerSimpleInfo* internal_default_instance();

  void Swap(struct_PlayerSimpleInfo* other);

  // implements Message ----------------------------------------------

  inline struct_PlayerSimpleInfo* New() const { return New(NULL); }

  struct_PlayerSimpleInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const struct_PlayerSimpleInfo& from);
  void MergeFrom(const struct_PlayerSimpleInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(struct_PlayerSimpleInfo* other);
  void UnsafeMergeFrom(const struct_PlayerSimpleInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 gender = 3;
  void clear_gender();
  static const int kGenderFieldNumber = 3;
  ::google::protobuf::uint32 gender() const;
  void set_gender(::google::protobuf::uint32 value);

  // optional uint32 profession = 4;
  void clear_profession();
  static const int kProfessionFieldNumber = 4;
  ::google::protobuf::uint32 profession() const;
  void set_profession(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xk_protobuf_data.struct_PlayerSimpleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 profession_;
  ::google::protobuf::uint32 level_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_proto_5fstruct_2eproto_impl();
  friend void  protobuf_AddDesc_proto_5fstruct_2eproto_impl();
  friend void protobuf_AssignDesc_proto_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_proto_5fstruct_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<struct_PlayerSimpleInfo> struct_PlayerSimpleInfo_default_instance_;

// -------------------------------------------------------------------

class struct_PlayerDetailInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xk_protobuf_data.struct_PlayerDetailInfo) */ {
 public:
  struct_PlayerDetailInfo();
  virtual ~struct_PlayerDetailInfo();

  struct_PlayerDetailInfo(const struct_PlayerDetailInfo& from);

  inline struct_PlayerDetailInfo& operator=(const struct_PlayerDetailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const struct_PlayerDetailInfo& default_instance();

  static const struct_PlayerDetailInfo* internal_default_instance();

  void Swap(struct_PlayerDetailInfo* other);

  // implements Message ----------------------------------------------

  inline struct_PlayerDetailInfo* New() const { return New(NULL); }

  struct_PlayerDetailInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const struct_PlayerDetailInfo& from);
  void MergeFrom(const struct_PlayerDetailInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(struct_PlayerDetailInfo* other);
  void UnsafeMergeFrom(const struct_PlayerDetailInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 gender = 3;
  void clear_gender();
  static const int kGenderFieldNumber = 3;
  ::google::protobuf::uint32 gender() const;
  void set_gender(::google::protobuf::uint32 value);

  // optional uint32 profession = 4;
  void clear_profession();
  static const int kProfessionFieldNumber = 4;
  ::google::protobuf::uint32 profession() const;
  void set_profession(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // repeated .xk_protobuf_data.struct_ItemInfo equipList = 6;
  int equiplist_size() const;
  void clear_equiplist();
  static const int kEquipListFieldNumber = 6;
  const ::xk_protobuf_data::struct_ItemInfo& equiplist(int index) const;
  ::xk_protobuf_data::struct_ItemInfo* mutable_equiplist(int index);
  ::xk_protobuf_data::struct_ItemInfo* add_equiplist();
  ::google::protobuf::RepeatedPtrField< ::xk_protobuf_data::struct_ItemInfo >*
      mutable_equiplist();
  const ::google::protobuf::RepeatedPtrField< ::xk_protobuf_data::struct_ItemInfo >&
      equiplist() const;

  // @@protoc_insertion_point(class_scope:xk_protobuf_data.struct_PlayerDetailInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xk_protobuf_data::struct_ItemInfo > equiplist_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 profession_;
  ::google::protobuf::uint32 level_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_proto_5fstruct_2eproto_impl();
  friend void  protobuf_AddDesc_proto_5fstruct_2eproto_impl();
  friend void protobuf_AssignDesc_proto_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_proto_5fstruct_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<struct_PlayerDetailInfo> struct_PlayerDetailInfo_default_instance_;

// -------------------------------------------------------------------

class struct_PlayerBagInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xk_protobuf_data.struct_PlayerBagInfo) */ {
 public:
  struct_PlayerBagInfo();
  virtual ~struct_PlayerBagInfo();

  struct_PlayerBagInfo(const struct_PlayerBagInfo& from);

  inline struct_PlayerBagInfo& operator=(const struct_PlayerBagInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const struct_PlayerBagInfo& default_instance();

  static const struct_PlayerBagInfo* internal_default_instance();

  void Swap(struct_PlayerBagInfo* other);

  // implements Message ----------------------------------------------

  inline struct_PlayerBagInfo* New() const { return New(NULL); }

  struct_PlayerBagInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const struct_PlayerBagInfo& from);
  void MergeFrom(const struct_PlayerBagInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(struct_PlayerBagInfo* other);
  void UnsafeMergeFrom(const struct_PlayerBagInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 maxCout = 1;
  void clear_maxcout();
  static const int kMaxCoutFieldNumber = 1;
  ::google::protobuf::uint32 maxcout() const;
  void set_maxcout(::google::protobuf::uint32 value);

  // repeated .xk_protobuf_data.struct_ItemInfo itemList = 2;
  int itemlist_size() const;
  void clear_itemlist();
  static const int kItemListFieldNumber = 2;
  const ::xk_protobuf_data::struct_ItemInfo& itemlist(int index) const;
  ::xk_protobuf_data::struct_ItemInfo* mutable_itemlist(int index);
  ::xk_protobuf_data::struct_ItemInfo* add_itemlist();
  ::google::protobuf::RepeatedPtrField< ::xk_protobuf_data::struct_ItemInfo >*
      mutable_itemlist();
  const ::google::protobuf::RepeatedPtrField< ::xk_protobuf_data::struct_ItemInfo >&
      itemlist() const;

  // @@protoc_insertion_point(class_scope:xk_protobuf_data.struct_PlayerBagInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xk_protobuf_data::struct_ItemInfo > itemlist_;
  ::google::protobuf::uint32 maxcout_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_proto_5fstruct_2eproto_impl();
  friend void  protobuf_AddDesc_proto_5fstruct_2eproto_impl();
  friend void protobuf_AssignDesc_proto_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_proto_5fstruct_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<struct_PlayerBagInfo> struct_PlayerBagInfo_default_instance_;

// -------------------------------------------------------------------

class struct_LOL_HeroDetailInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xk_protobuf_data.struct_LOL_HeroDetailInfo) */ {
 public:
  struct_LOL_HeroDetailInfo();
  virtual ~struct_LOL_HeroDetailInfo();

  struct_LOL_HeroDetailInfo(const struct_LOL_HeroDetailInfo& from);

  inline struct_LOL_HeroDetailInfo& operator=(const struct_LOL_HeroDetailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const struct_LOL_HeroDetailInfo& default_instance();

  static const struct_LOL_HeroDetailInfo* internal_default_instance();

  void Swap(struct_LOL_HeroDetailInfo* other);

  // implements Message ----------------------------------------------

  inline struct_LOL_HeroDetailInfo* New() const { return New(NULL); }

  struct_LOL_HeroDetailInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const struct_LOL_HeroDetailInfo& from);
  void MergeFrom(const struct_LOL_HeroDetailInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(struct_LOL_HeroDetailInfo* other);
  void UnsafeMergeFrom(const struct_LOL_HeroDetailInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint32 configId = 2;
  void clear_configid();
  static const int kConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 configid() const;
  void set_configid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xk_protobuf_data.struct_LOL_HeroDetailInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 configid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_proto_5fstruct_2eproto_impl();
  friend void  protobuf_AddDesc_proto_5fstruct_2eproto_impl();
  friend void protobuf_AssignDesc_proto_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_proto_5fstruct_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<struct_LOL_HeroDetailInfo> struct_LOL_HeroDetailInfo_default_instance_;

// -------------------------------------------------------------------

class struct_ChatInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xk_protobuf_data.struct_ChatInfo) */ {
 public:
  struct_ChatInfo();
  virtual ~struct_ChatInfo();

  struct_ChatInfo(const struct_ChatInfo& from);

  inline struct_ChatInfo& operator=(const struct_ChatInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const struct_ChatInfo& default_instance();

  static const struct_ChatInfo* internal_default_instance();

  void Swap(struct_ChatInfo* other);

  // implements Message ----------------------------------------------

  inline struct_ChatInfo* New() const { return New(NULL); }

  struct_ChatInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const struct_ChatInfo& from);
  void MergeFrom(const struct_ChatInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(struct_ChatInfo* other);
  void UnsafeMergeFrom(const struct_ChatInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 channelId = 1;
  void clear_channelid();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::uint32 channelid() const;
  void set_channelid(::google::protobuf::uint32 value);

  // optional .xk_protobuf_data.struct_PlayerSimpleInfo Sender = 2;
  bool has_sender() const;
  void clear_sender();
  static const int kSenderFieldNumber = 2;
  const ::xk_protobuf_data::struct_PlayerSimpleInfo& sender() const;
  ::xk_protobuf_data::struct_PlayerSimpleInfo* mutable_sender();
  ::xk_protobuf_data::struct_PlayerSimpleInfo* release_sender();
  void set_allocated_sender(::xk_protobuf_data::struct_PlayerSimpleInfo* sender);

  // optional .xk_protobuf_data.struct_PlayerSimpleInfo Receiver = 3;
  bool has_receiver() const;
  void clear_receiver();
  static const int kReceiverFieldNumber = 3;
  const ::xk_protobuf_data::struct_PlayerSimpleInfo& receiver() const;
  ::xk_protobuf_data::struct_PlayerSimpleInfo* mutable_receiver();
  ::xk_protobuf_data::struct_PlayerSimpleInfo* release_receiver();
  void set_allocated_receiver(::xk_protobuf_data::struct_PlayerSimpleInfo* receiver);

  // optional string TalkMsg = 4;
  void clear_talkmsg();
  static const int kTalkMsgFieldNumber = 4;
  const ::std::string& talkmsg() const;
  void set_talkmsg(const ::std::string& value);
  void set_talkmsg(const char* value);
  void set_talkmsg(const char* value, size_t size);
  ::std::string* mutable_talkmsg();
  ::std::string* release_talkmsg();
  void set_allocated_talkmsg(::std::string* talkmsg);

  // optional uint64 time = 5;
  void clear_time();
  static const int kTimeFieldNumber = 5;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:xk_protobuf_data.struct_ChatInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr talkmsg_;
  ::xk_protobuf_data::struct_PlayerSimpleInfo* sender_;
  ::xk_protobuf_data::struct_PlayerSimpleInfo* receiver_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint32 channelid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_proto_5fstruct_2eproto_impl();
  friend void  protobuf_AddDesc_proto_5fstruct_2eproto_impl();
  friend void protobuf_AssignDesc_proto_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_proto_5fstruct_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<struct_ChatInfo> struct_ChatInfo_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// struct_serverList

// optional string ip = 1;
inline void struct_serverList::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& struct_serverList::ip() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_serverList.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void struct_serverList::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_serverList.ip)
}
inline void struct_serverList::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xk_protobuf_data.struct_serverList.ip)
}
inline void struct_serverList::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xk_protobuf_data.struct_serverList.ip)
}
inline ::std::string* struct_serverList::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:xk_protobuf_data.struct_serverList.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* struct_serverList::release_ip() {
  // @@protoc_insertion_point(field_release:xk_protobuf_data.struct_serverList.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void struct_serverList::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:xk_protobuf_data.struct_serverList.ip)
}

// optional uint32 port = 2;
inline void struct_serverList::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 struct_serverList::port() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_serverList.port)
  return port_;
}
inline void struct_serverList::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_serverList.port)
}

// optional uint32 serverId = 3;
inline void struct_serverList::clear_serverid() {
  serverid_ = 0u;
}
inline ::google::protobuf::uint32 struct_serverList::serverid() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_serverList.serverId)
  return serverid_;
}
inline void struct_serverList::set_serverid(::google::protobuf::uint32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_serverList.serverId)
}

inline const struct_serverList* struct_serverList::internal_default_instance() {
  return &struct_serverList_default_instance_.get();
}
// -------------------------------------------------------------------

// struct_ItemInfo

// optional uint64 id = 1;
inline void struct_ItemInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 struct_ItemInfo::id() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_ItemInfo.id)
  return id_;
}
inline void struct_ItemInfo::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_ItemInfo.id)
}

// optional uint32 pos = 2;
inline void struct_ItemInfo::clear_pos() {
  pos_ = 0u;
}
inline ::google::protobuf::uint32 struct_ItemInfo::pos() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_ItemInfo.pos)
  return pos_;
}
inline void struct_ItemInfo::set_pos(::google::protobuf::uint32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_ItemInfo.pos)
}

// optional uint32 configId = 3;
inline void struct_ItemInfo::clear_configid() {
  configid_ = 0u;
}
inline ::google::protobuf::uint32 struct_ItemInfo::configid() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_ItemInfo.configId)
  return configid_;
}
inline void struct_ItemInfo::set_configid(::google::protobuf::uint32 value) {
  
  configid_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_ItemInfo.configId)
}

// optional uint32 cout = 4;
inline void struct_ItemInfo::clear_cout() {
  cout_ = 0u;
}
inline ::google::protobuf::uint32 struct_ItemInfo::cout() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_ItemInfo.cout)
  return cout_;
}
inline void struct_ItemInfo::set_cout(::google::protobuf::uint32 value) {
  
  cout_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_ItemInfo.cout)
}

inline const struct_ItemInfo* struct_ItemInfo::internal_default_instance() {
  return &struct_ItemInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// struct_PlayerSimpleInfo

// optional uint64 id = 1;
inline void struct_PlayerSimpleInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 struct_PlayerSimpleInfo::id() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_PlayerSimpleInfo.id)
  return id_;
}
inline void struct_PlayerSimpleInfo::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_PlayerSimpleInfo.id)
}

// optional string name = 2;
inline void struct_PlayerSimpleInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& struct_PlayerSimpleInfo::name() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_PlayerSimpleInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void struct_PlayerSimpleInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_PlayerSimpleInfo.name)
}
inline void struct_PlayerSimpleInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xk_protobuf_data.struct_PlayerSimpleInfo.name)
}
inline void struct_PlayerSimpleInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xk_protobuf_data.struct_PlayerSimpleInfo.name)
}
inline ::std::string* struct_PlayerSimpleInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:xk_protobuf_data.struct_PlayerSimpleInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* struct_PlayerSimpleInfo::release_name() {
  // @@protoc_insertion_point(field_release:xk_protobuf_data.struct_PlayerSimpleInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void struct_PlayerSimpleInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:xk_protobuf_data.struct_PlayerSimpleInfo.name)
}

// optional uint32 gender = 3;
inline void struct_PlayerSimpleInfo::clear_gender() {
  gender_ = 0u;
}
inline ::google::protobuf::uint32 struct_PlayerSimpleInfo::gender() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_PlayerSimpleInfo.gender)
  return gender_;
}
inline void struct_PlayerSimpleInfo::set_gender(::google::protobuf::uint32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_PlayerSimpleInfo.gender)
}

// optional uint32 profession = 4;
inline void struct_PlayerSimpleInfo::clear_profession() {
  profession_ = 0u;
}
inline ::google::protobuf::uint32 struct_PlayerSimpleInfo::profession() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_PlayerSimpleInfo.profession)
  return profession_;
}
inline void struct_PlayerSimpleInfo::set_profession(::google::protobuf::uint32 value) {
  
  profession_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_PlayerSimpleInfo.profession)
}

// optional uint32 level = 5;
inline void struct_PlayerSimpleInfo::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 struct_PlayerSimpleInfo::level() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_PlayerSimpleInfo.level)
  return level_;
}
inline void struct_PlayerSimpleInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_PlayerSimpleInfo.level)
}

inline const struct_PlayerSimpleInfo* struct_PlayerSimpleInfo::internal_default_instance() {
  return &struct_PlayerSimpleInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// struct_PlayerDetailInfo

// optional uint64 id = 1;
inline void struct_PlayerDetailInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 struct_PlayerDetailInfo::id() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_PlayerDetailInfo.id)
  return id_;
}
inline void struct_PlayerDetailInfo::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_PlayerDetailInfo.id)
}

// optional string name = 2;
inline void struct_PlayerDetailInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& struct_PlayerDetailInfo::name() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_PlayerDetailInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void struct_PlayerDetailInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_PlayerDetailInfo.name)
}
inline void struct_PlayerDetailInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xk_protobuf_data.struct_PlayerDetailInfo.name)
}
inline void struct_PlayerDetailInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xk_protobuf_data.struct_PlayerDetailInfo.name)
}
inline ::std::string* struct_PlayerDetailInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:xk_protobuf_data.struct_PlayerDetailInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* struct_PlayerDetailInfo::release_name() {
  // @@protoc_insertion_point(field_release:xk_protobuf_data.struct_PlayerDetailInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void struct_PlayerDetailInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:xk_protobuf_data.struct_PlayerDetailInfo.name)
}

// optional uint32 gender = 3;
inline void struct_PlayerDetailInfo::clear_gender() {
  gender_ = 0u;
}
inline ::google::protobuf::uint32 struct_PlayerDetailInfo::gender() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_PlayerDetailInfo.gender)
  return gender_;
}
inline void struct_PlayerDetailInfo::set_gender(::google::protobuf::uint32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_PlayerDetailInfo.gender)
}

// optional uint32 profession = 4;
inline void struct_PlayerDetailInfo::clear_profession() {
  profession_ = 0u;
}
inline ::google::protobuf::uint32 struct_PlayerDetailInfo::profession() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_PlayerDetailInfo.profession)
  return profession_;
}
inline void struct_PlayerDetailInfo::set_profession(::google::protobuf::uint32 value) {
  
  profession_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_PlayerDetailInfo.profession)
}

// optional uint32 level = 5;
inline void struct_PlayerDetailInfo::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 struct_PlayerDetailInfo::level() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_PlayerDetailInfo.level)
  return level_;
}
inline void struct_PlayerDetailInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_PlayerDetailInfo.level)
}

// repeated .xk_protobuf_data.struct_ItemInfo equipList = 6;
inline int struct_PlayerDetailInfo::equiplist_size() const {
  return equiplist_.size();
}
inline void struct_PlayerDetailInfo::clear_equiplist() {
  equiplist_.Clear();
}
inline const ::xk_protobuf_data::struct_ItemInfo& struct_PlayerDetailInfo::equiplist(int index) const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_PlayerDetailInfo.equipList)
  return equiplist_.Get(index);
}
inline ::xk_protobuf_data::struct_ItemInfo* struct_PlayerDetailInfo::mutable_equiplist(int index) {
  // @@protoc_insertion_point(field_mutable:xk_protobuf_data.struct_PlayerDetailInfo.equipList)
  return equiplist_.Mutable(index);
}
inline ::xk_protobuf_data::struct_ItemInfo* struct_PlayerDetailInfo::add_equiplist() {
  // @@protoc_insertion_point(field_add:xk_protobuf_data.struct_PlayerDetailInfo.equipList)
  return equiplist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xk_protobuf_data::struct_ItemInfo >*
struct_PlayerDetailInfo::mutable_equiplist() {
  // @@protoc_insertion_point(field_mutable_list:xk_protobuf_data.struct_PlayerDetailInfo.equipList)
  return &equiplist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xk_protobuf_data::struct_ItemInfo >&
struct_PlayerDetailInfo::equiplist() const {
  // @@protoc_insertion_point(field_list:xk_protobuf_data.struct_PlayerDetailInfo.equipList)
  return equiplist_;
}

inline const struct_PlayerDetailInfo* struct_PlayerDetailInfo::internal_default_instance() {
  return &struct_PlayerDetailInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// struct_PlayerBagInfo

// optional uint32 maxCout = 1;
inline void struct_PlayerBagInfo::clear_maxcout() {
  maxcout_ = 0u;
}
inline ::google::protobuf::uint32 struct_PlayerBagInfo::maxcout() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_PlayerBagInfo.maxCout)
  return maxcout_;
}
inline void struct_PlayerBagInfo::set_maxcout(::google::protobuf::uint32 value) {
  
  maxcout_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_PlayerBagInfo.maxCout)
}

// repeated .xk_protobuf_data.struct_ItemInfo itemList = 2;
inline int struct_PlayerBagInfo::itemlist_size() const {
  return itemlist_.size();
}
inline void struct_PlayerBagInfo::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::xk_protobuf_data::struct_ItemInfo& struct_PlayerBagInfo::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_PlayerBagInfo.itemList)
  return itemlist_.Get(index);
}
inline ::xk_protobuf_data::struct_ItemInfo* struct_PlayerBagInfo::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:xk_protobuf_data.struct_PlayerBagInfo.itemList)
  return itemlist_.Mutable(index);
}
inline ::xk_protobuf_data::struct_ItemInfo* struct_PlayerBagInfo::add_itemlist() {
  // @@protoc_insertion_point(field_add:xk_protobuf_data.struct_PlayerBagInfo.itemList)
  return itemlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xk_protobuf_data::struct_ItemInfo >*
struct_PlayerBagInfo::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:xk_protobuf_data.struct_PlayerBagInfo.itemList)
  return &itemlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xk_protobuf_data::struct_ItemInfo >&
struct_PlayerBagInfo::itemlist() const {
  // @@protoc_insertion_point(field_list:xk_protobuf_data.struct_PlayerBagInfo.itemList)
  return itemlist_;
}

inline const struct_PlayerBagInfo* struct_PlayerBagInfo::internal_default_instance() {
  return &struct_PlayerBagInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// struct_LOL_HeroDetailInfo

// optional uint64 id = 1;
inline void struct_LOL_HeroDetailInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 struct_LOL_HeroDetailInfo::id() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_LOL_HeroDetailInfo.id)
  return id_;
}
inline void struct_LOL_HeroDetailInfo::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_LOL_HeroDetailInfo.id)
}

// optional uint32 configId = 2;
inline void struct_LOL_HeroDetailInfo::clear_configid() {
  configid_ = 0u;
}
inline ::google::protobuf::uint32 struct_LOL_HeroDetailInfo::configid() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_LOL_HeroDetailInfo.configId)
  return configid_;
}
inline void struct_LOL_HeroDetailInfo::set_configid(::google::protobuf::uint32 value) {
  
  configid_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_LOL_HeroDetailInfo.configId)
}

inline const struct_LOL_HeroDetailInfo* struct_LOL_HeroDetailInfo::internal_default_instance() {
  return &struct_LOL_HeroDetailInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// struct_ChatInfo

// optional uint32 channelId = 1;
inline void struct_ChatInfo::clear_channelid() {
  channelid_ = 0u;
}
inline ::google::protobuf::uint32 struct_ChatInfo::channelid() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_ChatInfo.channelId)
  return channelid_;
}
inline void struct_ChatInfo::set_channelid(::google::protobuf::uint32 value) {
  
  channelid_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_ChatInfo.channelId)
}

// optional .xk_protobuf_data.struct_PlayerSimpleInfo Sender = 2;
inline bool struct_ChatInfo::has_sender() const {
  return this != internal_default_instance() && sender_ != NULL;
}
inline void struct_ChatInfo::clear_sender() {
  if (GetArenaNoVirtual() == NULL && sender_ != NULL) delete sender_;
  sender_ = NULL;
}
inline const ::xk_protobuf_data::struct_PlayerSimpleInfo& struct_ChatInfo::sender() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_ChatInfo.Sender)
  return sender_ != NULL ? *sender_
                         : *::xk_protobuf_data::struct_PlayerSimpleInfo::internal_default_instance();
}
inline ::xk_protobuf_data::struct_PlayerSimpleInfo* struct_ChatInfo::mutable_sender() {
  
  if (sender_ == NULL) {
    sender_ = new ::xk_protobuf_data::struct_PlayerSimpleInfo;
  }
  // @@protoc_insertion_point(field_mutable:xk_protobuf_data.struct_ChatInfo.Sender)
  return sender_;
}
inline ::xk_protobuf_data::struct_PlayerSimpleInfo* struct_ChatInfo::release_sender() {
  // @@protoc_insertion_point(field_release:xk_protobuf_data.struct_ChatInfo.Sender)
  
  ::xk_protobuf_data::struct_PlayerSimpleInfo* temp = sender_;
  sender_ = NULL;
  return temp;
}
inline void struct_ChatInfo::set_allocated_sender(::xk_protobuf_data::struct_PlayerSimpleInfo* sender) {
  delete sender_;
  sender_ = sender;
  if (sender) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xk_protobuf_data.struct_ChatInfo.Sender)
}

// optional .xk_protobuf_data.struct_PlayerSimpleInfo Receiver = 3;
inline bool struct_ChatInfo::has_receiver() const {
  return this != internal_default_instance() && receiver_ != NULL;
}
inline void struct_ChatInfo::clear_receiver() {
  if (GetArenaNoVirtual() == NULL && receiver_ != NULL) delete receiver_;
  receiver_ = NULL;
}
inline const ::xk_protobuf_data::struct_PlayerSimpleInfo& struct_ChatInfo::receiver() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_ChatInfo.Receiver)
  return receiver_ != NULL ? *receiver_
                         : *::xk_protobuf_data::struct_PlayerSimpleInfo::internal_default_instance();
}
inline ::xk_protobuf_data::struct_PlayerSimpleInfo* struct_ChatInfo::mutable_receiver() {
  
  if (receiver_ == NULL) {
    receiver_ = new ::xk_protobuf_data::struct_PlayerSimpleInfo;
  }
  // @@protoc_insertion_point(field_mutable:xk_protobuf_data.struct_ChatInfo.Receiver)
  return receiver_;
}
inline ::xk_protobuf_data::struct_PlayerSimpleInfo* struct_ChatInfo::release_receiver() {
  // @@protoc_insertion_point(field_release:xk_protobuf_data.struct_ChatInfo.Receiver)
  
  ::xk_protobuf_data::struct_PlayerSimpleInfo* temp = receiver_;
  receiver_ = NULL;
  return temp;
}
inline void struct_ChatInfo::set_allocated_receiver(::xk_protobuf_data::struct_PlayerSimpleInfo* receiver) {
  delete receiver_;
  receiver_ = receiver;
  if (receiver) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xk_protobuf_data.struct_ChatInfo.Receiver)
}

// optional string TalkMsg = 4;
inline void struct_ChatInfo::clear_talkmsg() {
  talkmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& struct_ChatInfo::talkmsg() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_ChatInfo.TalkMsg)
  return talkmsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void struct_ChatInfo::set_talkmsg(const ::std::string& value) {
  
  talkmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_ChatInfo.TalkMsg)
}
inline void struct_ChatInfo::set_talkmsg(const char* value) {
  
  talkmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xk_protobuf_data.struct_ChatInfo.TalkMsg)
}
inline void struct_ChatInfo::set_talkmsg(const char* value, size_t size) {
  
  talkmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xk_protobuf_data.struct_ChatInfo.TalkMsg)
}
inline ::std::string* struct_ChatInfo::mutable_talkmsg() {
  
  // @@protoc_insertion_point(field_mutable:xk_protobuf_data.struct_ChatInfo.TalkMsg)
  return talkmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* struct_ChatInfo::release_talkmsg() {
  // @@protoc_insertion_point(field_release:xk_protobuf_data.struct_ChatInfo.TalkMsg)
  
  return talkmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void struct_ChatInfo::set_allocated_talkmsg(::std::string* talkmsg) {
  if (talkmsg != NULL) {
    
  } else {
    
  }
  talkmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), talkmsg);
  // @@protoc_insertion_point(field_set_allocated:xk_protobuf_data.struct_ChatInfo.TalkMsg)
}

// optional uint64 time = 5;
inline void struct_ChatInfo::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 struct_ChatInfo::time() const {
  // @@protoc_insertion_point(field_get:xk_protobuf_data.struct_ChatInfo.time)
  return time_;
}
inline void struct_ChatInfo::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:xk_protobuf_data.struct_ChatInfo.time)
}

inline const struct_ChatInfo* struct_ChatInfo::internal_default_instance() {
  return &struct_ChatInfo_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace xk_protobuf_data

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_5fstruct_2eproto__INCLUDED
