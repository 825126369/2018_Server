// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db_protobuf_struct.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "db_protobuf_struct.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace db_protobuf {

namespace {

const ::google::protobuf::Descriptor* serverinfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  serverinfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_db_5fprotobuf_5fstruct_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_db_5fprotobuf_5fstruct_2eproto() {
  protobuf_AddDesc_db_5fprotobuf_5fstruct_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "db_protobuf_struct.proto");
  GOOGLE_CHECK(file != NULL);
  serverinfo_descriptor_ = file->message_type(0);
  static const int serverinfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(serverinfo, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(serverinfo, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(serverinfo, lastloginroleid_),
  };
  serverinfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      serverinfo_descriptor_,
      serverinfo::internal_default_instance(),
      serverinfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(serverinfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(serverinfo, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_db_5fprotobuf_5fstruct_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      serverinfo_descriptor_, serverinfo::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_db_5fprotobuf_5fstruct_2eproto() {
  serverinfo_default_instance_.Shutdown();
  delete serverinfo_reflection_;
}

void protobuf_InitDefaults_db_5fprotobuf_5fstruct_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  serverinfo_default_instance_.DefaultConstruct();
  serverinfo_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_db_5fprotobuf_5fstruct_2eproto_once_);
void protobuf_InitDefaults_db_5fprotobuf_5fstruct_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_db_5fprotobuf_5fstruct_2eproto_once_,
                 &protobuf_InitDefaults_db_5fprotobuf_5fstruct_2eproto_impl);
}
void protobuf_AddDesc_db_5fprotobuf_5fstruct_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_db_5fprotobuf_5fstruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030db_protobuf_struct.proto\022\013db_protobuf\""
    "G\n\nserverinfo\022\020\n\010serverId\030\001 \001(\004\022\016\n\006roleI"
    "d\030\002 \003(\004\022\027\n\017lastLoginRoleId\030\003 \001(\004b\006proto3", 120);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "db_protobuf_struct.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_db_5fprotobuf_5fstruct_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_db_5fprotobuf_5fstruct_2eproto_once_);
void protobuf_AddDesc_db_5fprotobuf_5fstruct_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_db_5fprotobuf_5fstruct_2eproto_once_,
                 &protobuf_AddDesc_db_5fprotobuf_5fstruct_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_db_5fprotobuf_5fstruct_2eproto {
  StaticDescriptorInitializer_db_5fprotobuf_5fstruct_2eproto() {
    protobuf_AddDesc_db_5fprotobuf_5fstruct_2eproto();
  }
} static_descriptor_initializer_db_5fprotobuf_5fstruct_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int serverinfo::kServerIdFieldNumber;
const int serverinfo::kRoleIdFieldNumber;
const int serverinfo::kLastLoginRoleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

serverinfo::serverinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_db_5fprotobuf_5fstruct_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:db_protobuf.serverinfo)
}

void serverinfo::InitAsDefaultInstance() {
}

serverinfo::serverinfo(const serverinfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:db_protobuf.serverinfo)
}

void serverinfo::SharedCtor() {
  ::memset(&serverid_, 0, reinterpret_cast<char*>(&lastloginroleid_) -
    reinterpret_cast<char*>(&serverid_) + sizeof(lastloginroleid_));
  _cached_size_ = 0;
}

serverinfo::~serverinfo() {
  // @@protoc_insertion_point(destructor:db_protobuf.serverinfo)
  SharedDtor();
}

void serverinfo::SharedDtor() {
}

void serverinfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* serverinfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return serverinfo_descriptor_;
}

const serverinfo& serverinfo::default_instance() {
  protobuf_InitDefaults_db_5fprotobuf_5fstruct_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<serverinfo> serverinfo_default_instance_;

serverinfo* serverinfo::New(::google::protobuf::Arena* arena) const {
  serverinfo* n = new serverinfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void serverinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:db_protobuf.serverinfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(serverinfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<serverinfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(serverid_, lastloginroleid_);

#undef ZR_HELPER_
#undef ZR_

  roleid_.Clear();
}

bool serverinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db_protobuf.serverinfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 serverId = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_roleId;
        break;
      }

      // repeated uint64 roleId = 2;
      case 2: {
        if (tag == 18) {
         parse_roleId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_roleid())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18, input, this->mutable_roleid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_lastLoginRoleId;
        break;
      }

      // optional uint64 lastLoginRoleId = 3;
      case 3: {
        if (tag == 24) {
         parse_lastLoginRoleId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lastloginroleid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db_protobuf.serverinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db_protobuf.serverinfo)
  return false;
#undef DO_
}

void serverinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db_protobuf.serverinfo)
  // optional uint64 serverId = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->serverid(), output);
  }

  // repeated uint64 roleId = 2;
  if (this->roleid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_roleid_cached_byte_size_);
  }
  for (int i = 0; i < this->roleid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->roleid(i), output);
  }

  // optional uint64 lastLoginRoleId = 3;
  if (this->lastloginroleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->lastloginroleid(), output);
  }

  // @@protoc_insertion_point(serialize_end:db_protobuf.serverinfo)
}

::google::protobuf::uint8* serverinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db_protobuf.serverinfo)
  // optional uint64 serverId = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->serverid(), target);
  }

  // repeated uint64 roleId = 2;
  if (this->roleid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _roleid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->roleid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->roleid(i), target);
  }

  // optional uint64 lastLoginRoleId = 3;
  if (this->lastloginroleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->lastloginroleid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:db_protobuf.serverinfo)
  return target;
}

size_t serverinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db_protobuf.serverinfo)
  size_t total_size = 0;

  // optional uint64 serverId = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // optional uint64 lastLoginRoleId = 3;
  if (this->lastloginroleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lastloginroleid());
  }

  // repeated uint64 roleId = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->roleid_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->roleid(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _roleid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void serverinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db_protobuf.serverinfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const serverinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const serverinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db_protobuf.serverinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db_protobuf.serverinfo)
    UnsafeMergeFrom(*source);
  }
}

void serverinfo::MergeFrom(const serverinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db_protobuf.serverinfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void serverinfo::UnsafeMergeFrom(const serverinfo& from) {
  GOOGLE_DCHECK(&from != this);
  roleid_.UnsafeMergeFrom(from.roleid_);
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.lastloginroleid() != 0) {
    set_lastloginroleid(from.lastloginroleid());
  }
}

void serverinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db_protobuf.serverinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void serverinfo::CopyFrom(const serverinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db_protobuf.serverinfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool serverinfo::IsInitialized() const {

  return true;
}

void serverinfo::Swap(serverinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void serverinfo::InternalSwap(serverinfo* other) {
  std::swap(serverid_, other->serverid_);
  roleid_.UnsafeArenaSwap(&other->roleid_);
  std::swap(lastloginroleid_, other->lastloginroleid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata serverinfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = serverinfo_descriptor_;
  metadata.reflection = serverinfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// serverinfo

// optional uint64 serverId = 1;
void serverinfo::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 serverinfo::serverid() const {
  // @@protoc_insertion_point(field_get:db_protobuf.serverinfo.serverId)
  return serverid_;
}
void serverinfo::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:db_protobuf.serverinfo.serverId)
}

// repeated uint64 roleId = 2;
int serverinfo::roleid_size() const {
  return roleid_.size();
}
void serverinfo::clear_roleid() {
  roleid_.Clear();
}
::google::protobuf::uint64 serverinfo::roleid(int index) const {
  // @@protoc_insertion_point(field_get:db_protobuf.serverinfo.roleId)
  return roleid_.Get(index);
}
void serverinfo::set_roleid(int index, ::google::protobuf::uint64 value) {
  roleid_.Set(index, value);
  // @@protoc_insertion_point(field_set:db_protobuf.serverinfo.roleId)
}
void serverinfo::add_roleid(::google::protobuf::uint64 value) {
  roleid_.Add(value);
  // @@protoc_insertion_point(field_add:db_protobuf.serverinfo.roleId)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
serverinfo::roleid() const {
  // @@protoc_insertion_point(field_list:db_protobuf.serverinfo.roleId)
  return roleid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
serverinfo::mutable_roleid() {
  // @@protoc_insertion_point(field_mutable_list:db_protobuf.serverinfo.roleId)
  return &roleid_;
}

// optional uint64 lastLoginRoleId = 3;
void serverinfo::clear_lastloginroleid() {
  lastloginroleid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 serverinfo::lastloginroleid() const {
  // @@protoc_insertion_point(field_get:db_protobuf.serverinfo.lastLoginRoleId)
  return lastloginroleid_;
}
void serverinfo::set_lastloginroleid(::google::protobuf::uint64 value) {
  
  lastloginroleid_ = value;
  // @@protoc_insertion_point(field_set:db_protobuf.serverinfo.lastLoginRoleId)
}

inline const serverinfo* serverinfo::internal_default_instance() {
  return &serverinfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace db_protobuf

// @@protoc_insertion_point(global_scope)
