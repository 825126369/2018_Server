// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aaa.proto

#ifndef PROTOBUF_aaa_2eproto__INCLUDED
#define PROTOBUF_aaa_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_aaa_2eproto();
void protobuf_AssignDesc_aaa_2eproto();
void protobuf_ShutdownFile_aaa_2eproto();

class People;

// ===================================================================

class People : public ::google::protobuf::Message {
 public:
  People();
  virtual ~People();

  People(const People& from);

  inline People& operator=(const People& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const People& default_instance();

  void Swap(People* other);

  // implements Message ----------------------------------------------

  inline People* New() const { return New(NULL); }

  People* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const People& from);
  void MergeFrom(const People& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(People* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tizhong = 1;
  void clear_tizhong();
  static const int kTizhongFieldNumber = 1;
  ::google::protobuf::int32 tizhong() const;
  void set_tizhong(::google::protobuf::int32 value);

  // repeated int32 shengao = 2;
  int shengao_size() const;
  void clear_shengao();
  static const int kShengaoFieldNumber = 2;
  ::google::protobuf::int32 shengao(int index) const;
  void set_shengao(int index, ::google::protobuf::int32 value);
  void add_shengao(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shengao() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shengao();

  // optional string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:People)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shengao_;
  mutable int _shengao_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 tizhong_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_aaa_2eproto();
  friend void protobuf_AssignDesc_aaa_2eproto();
  friend void protobuf_ShutdownFile_aaa_2eproto();

  void InitAsDefaultInstance();
  static People* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// People

// optional int32 tizhong = 1;
inline void People::clear_tizhong() {
  tizhong_ = 0;
}
inline ::google::protobuf::int32 People::tizhong() const {
  // @@protoc_insertion_point(field_get:People.tizhong)
  return tizhong_;
}
inline void People::set_tizhong(::google::protobuf::int32 value) {
  
  tizhong_ = value;
  // @@protoc_insertion_point(field_set:People.tizhong)
}

// repeated int32 shengao = 2;
inline int People::shengao_size() const {
  return shengao_.size();
}
inline void People::clear_shengao() {
  shengao_.Clear();
}
inline ::google::protobuf::int32 People::shengao(int index) const {
  // @@protoc_insertion_point(field_get:People.shengao)
  return shengao_.Get(index);
}
inline void People::set_shengao(int index, ::google::protobuf::int32 value) {
  shengao_.Set(index, value);
  // @@protoc_insertion_point(field_set:People.shengao)
}
inline void People::add_shengao(::google::protobuf::int32 value) {
  shengao_.Add(value);
  // @@protoc_insertion_point(field_add:People.shengao)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
People::shengao() const {
  // @@protoc_insertion_point(field_list:People.shengao)
  return shengao_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
People::mutable_shengao() {
  // @@protoc_insertion_point(field_mutable_list:People.shengao)
  return &shengao_;
}

// optional string name = 3;
inline void People::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& People::name() const {
  // @@protoc_insertion_point(field_get:People.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void People::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:People.name)
}
inline void People::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:People.name)
}
inline void People::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:People.name)
}
inline ::std::string* People::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:People.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* People::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void People::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:People.name)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_aaa_2eproto__INCLUDED
